name: Go workflow

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: lztd1/golangstudy/golangstudy
  
permissions:
    contents: write
    packages: write
    
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go 1.23.3
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.3
      - name: Display Go version
        run: go version
      - name: Install deps
        run: go mod download
      - name: try build
        run: go build ./cmd/main.go
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: ['build']
    steps:
      - uses: actions/checkout@v4
      - name: push into grc.io
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push Docker image
        uses: docker/build-push-action@v6
        with:
          file: ./Dockerfile
          context: .
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          push: true
  releases-matrix:
    name: Release Go Binary
    runs-on: ubuntu-latest
    needs: ['build']
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: ["386", amd64, arm64]
        exclude:
          - goarch: "386"
            goos: darwin
          - goarch: arm64
            goos: windows
    steps:
    - uses: actions/checkout@v4
    - uses: wangyoucao577/go-release-action@v1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        goos: ${{ matrix.goos }}
        goarch: ${{ matrix.goarch }}
        goversion: "https://dl.google.com/go/go1.23.3.linux-amd64.tar.gz"
        project_path: "./cmd"
        binary_name: "main"
